  build-bootimg:
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:     
jobs:
    runs-on: ubuntu-22.04
    needs: cache-dependencies
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Install build dependencies (编译工具)
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache flex g++-multilib gcc-multilib lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5-dev libssl-dev lzop rsync zip zlib1g-dev

      - name: Restore kernel source cache
        uses: actions/cache@v3
        with:
          path: ./kernel
          key: kernel-${{ needs.cache-dependencies.outputs.kernel_branch }}-${{ needs.cache-dependencies.outputs.device_codename }}-${{ runner.os }}

      - name: Restore device trees cache
        uses: actions/cache@v3
        with:
          path: |
            ./device/sony/${{ needs.cache-dependencies.outputs.device_codename }}
            ./device/sony/sm8550-common
          key: device-${{ needs.cache-dependencies.outputs.device_codename }}-${{ needs.cache-dependencies.outputs.kernel_branch }}-${{ runner.os }}

      - name: Restore Clang toolchain cache
        uses: actions/cache@v3
        with:
          path: ./clang-r498229b
          key: clang-r498229b-${{ runner.os }}

      - name: Add Clang to PATH
        run: echo "PATH=$(pwd)/clang-r498229b/bin:$PATH" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          cd kernel
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export CC=clang
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export STRIP=llvm-strip
          make O=out vendor/sony/pdx234_config
          make O=out -j$(nproc)

      - name: Prepare ramdisk
        run: |
          DEVICE_CODENAME="${{ needs.cache-dependencies.outputs.device_codename }}"
          mkdir -p ramdisk
          cp -r device/sony/${DEVICE_CODENAME}/ramdisk/* ramdisk/
          cd ramdisk
          find . | cpio -o -H newc | lz4 -l -12 -f - ../ramdisk.img
          cd ..

      - name: Build boot.img
        run: |
          DEVICE_CODENAME="${{ needs.cache-dependencies.outputs.device_codename }}"
          KERNEL_BRANCH="${{ needs.cache-dependencies.outputs.kernel_branch }}"
          wget https://github.com/osm0sis/mkbootimg/releases/latest/download/mkbootimg -O mkbootimg
          chmod +x mkbootimg
          ./mkbootimg \
            --kernel kernel/out/arch/arm64/boot/Image.gz-dtb \
            --ramdisk ramdisk.img \
            --base 0x00000000 \
            --cmdline "video=vfb:640x400,bpp=32,memsize=3072000 nosoftlockup" \
            --bootconfig "androidboot.hardware=qcom androidboot.memcg=1 androidboot.usbcontroller=a600000.dwc3" \
            --pagesize 4096 \
            --ramdiskoffset 0x01000000 \
            --tagsoffset 0x00000100 \
            --headerversion 4 \
            --osversion 14 \
            --ospatchlevel 2025-04 \
            --output boot-${DEVICE_CODENAME}-${KERNEL_BRANCH}.img

      - name: Upload boot.img
        uses: actions/upload-artifact@v4
        with:
          name: boot-image-${{ needs.cache-dependencies.outputs.device_codename }}-${{ needs.cache-dependencies.outputs.kernel_branch }}
          path: boot-${{ needs.cache-dependencies.outputs.device_codename }}-${{ needs.cache-dependencies.outputs.kernel_branch }}.img
