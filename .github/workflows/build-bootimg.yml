name: Build Boot Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential ccache curl flex g++-multilib gcc-multilib \
            git git-lfs gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev \
            lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev \
            libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync \
            schedtool squashfs-tools xsltproc zip zlib1g-dev

      - name: Fetch kernel source
        run: |
          # 拉取内核源码（替换为你的内核仓库）
          git clone https://github.com/LineageOS/android_kernel_sony_sm8550.git kernel
          cd kernel
          git checkout lineage-22.2  # 切换到目标分支

      - name: Fetch device tree
        run: |
          # 拉取设备树（替换为你的设备树仓库）
          git clone https://github.com/LineageOS/android_device_sony_pdx234.git device/sony/pdx234
          git clone https://github.com/LineageOS/android_device_sony_sm8550-common.git device/sony/sm8550-common

      - name: Download Clang toolchain
        run: |
          # 下载适合的 Clang 工具链（以 r498229b 为例）
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/tags/android-14.0.0_r35/clang-r498229b.tar.gz
          mkdir -p clang-r498229b
          tar -zxf clang-r498229b.tar.gz -C clang-r498229b
          # 添加到环境变量
          echo "PATH=$(pwd)/clang-r498229b/bin:$PATH" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          cd kernel
          # 设置编译参数（根据设备调整）
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export CC=clang
          export LD=ld.lld

          # 加载设备配置（从设备树中获取的 defconfig）
          make O=out pdx234_defconfig  # 替换为你的设备配置

          # 编译内核
          make O=out -j$(nproc)

      - name: Prepare ramdisk
        run: |
          # 从设备树复制 ramdisk 基础文件
          mkdir -p ramdisk
          cp -r device/sony/pdx234/ramdisk/* ramdisk/
          # 生成 ramdisk.img（打包为 cpio 格式）
          cd ramdisk
          find . | cpio -o -H newc | gzip > ../ramdisk.img
          cd ..

      - name: Build boot.img
        run: |
          # 下载 mkbootimg 工具
          wget https://github.com/osm0sis/mkbootimg/releases/latest/download/mkbootimg -O mkbootimg
          chmod +x mkbootimg

          # 从设备树的 BoardConfig 中获取参数（需手动提取关键参数）
          ./mkbootimg \
            --kernel kernel/out/arch/arm64/boot/Image.gz-dtb \
            --ramdisk ramdisk.img \
            --base 0x00000000 \
            --cmdline "console=ttyMSM0,115200n8 androidboot.hardware=qcom androidboot.console=ttyMSM0" \
            --pagesize 4096 \
            --ramdisk_offset 0x01000000 \
            --tags_offset 0x00000100 \
            --os_version 14 \
            --os_patch_level 2024-05 \
            --output boot.img

      - name: Upload boot.img
        uses: actions/upload-artifact@v4
        with:
          name: boot-image
          path: boot.img
